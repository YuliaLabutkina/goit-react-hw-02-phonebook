{"version":3,"sources":["components/ContactForm/ContactFormStyle.js","components/ContactForm/ContactForm.js","components/Filter/FilterStyle.js","components/Filter/Filter.js","components/ContactList/ContactListItemStyle.js","components/ContactList/ContactListItem.js","components/ContactList/ContactListStyle.js","components/ContactList/ContactList.js","components/App/AppStyle.js","components/App/App.js","index.js"],"names":["Form","styled","form","LabelForm","label","InputForm","input","Button","button","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","event","preventDefault","contact","id","uuidv4","props","handleSubmitContactForm","reset","this","onSubmit","onChange","type","placeholder","required","Component","FilterLabel","FilterInput","Filter","changeFilterName","ListItem","li","Text","p","ContactListItem","deleteContact","onClick","List","ul","ContactList","filterContacts","length","map","Container","div","MainTitle","h1","ContactTitle","h2","App","contacts","filter","checkingForExistenceOfSuchName","verifiableName","handleName","toLowerCase","find","data","alert","prev","contactId","searchName","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.357e15e6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LabelForm = styled.label`\n  text-align: center;\n  font-size: 22px;\n  font-weight: bold;\n  color: #e9967a;\n`;\n\nconst InputForm = styled.input`\n  display: block;\n  margin: 20px auto;\n  padding-left: 16px;\n  font-size: 18px;\n\n  &::placeholder {\n    padding-left: 10px;\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  position: relative;\n  display: inline-block;\n  width: 180px;\n  margin: 0 auto;\n  color: #777674;\n  font-weight: bold;\n  text-decoration: none;\n  text-shadow: rgba(255, 255, 255, 0.5) 1px 1px,\n    rgba(100, 100, 100, 0.3) 3px 7px 3px;\n  user-select: none;\n  padding: 1em 2em;\n  outline: none;\n  border-radius: 3px / 100%;\n  background-image: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0) 30%,\n      rgba(255, 255, 255, 0.8),\n      rgba(255, 255, 255, 0) 70%\n    ),\n    linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1),\n      rgba(255, 255, 255, 0) 20%,\n      rgba(255, 255, 255, 0) 90%,\n      rgba(255, 255, 255, 0.3)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    );\n  background-repeat: no-repeat;\n  background-size: 200% 100%, auto, 100% 2px, 100% 2px, 100% 1px, 100% 1px;\n  background-position: 200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  box-shadow: rgba(0, 0, 0, 0.5) 3px 10px 10px -10px;\n\n  &:hover {\n    transition: 0.5s linear;\n    background-position: -200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  }\n\n  &:active {\n    top: 1px;\n  }\n`;\n\nexport { Form, LabelForm, InputForm, Button };\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Form, LabelForm, InputForm, Button } from './ContactFormStyle';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({target}) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const contact = { id: uuidv4(), name, number };\n\n    this.props.handleSubmitContactForm(contact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <LabelForm>Name\n          <InputForm\n            onChange={this.handleChange}\n            type=\"text\"\n            name={'name'}\n            placeholder=\"Enter name\"\n            value={name}\n            required\n          />\n        </LabelForm>\n        <LabelForm>Number\n          <InputForm\n            onChange={this.handleChange}\n            type=\"tel\"\n            name={'number'}\n            placeholder=\"Enter number\"\n            value={number}\n            required\n          />\n        </LabelForm>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  handleSubmitContactForm: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nconst FilterLabel = styled.label`\n  display: block;\n  text-align: center;\n  margin: 0 auto;\n  color: #fa8072;\n  font-size: 22px;\n  font-weight: bold;\n`;\n\nconst FilterInput = styled.input`\n  width: 200px;\n  font-size: 18px;\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  &::placeholder {\n    padding-left: 10px;\n    font-size: 16px;\n  }\n`;\n\nexport { FilterLabel, FilterInput };\n","import PropTypes from 'prop-types';\nimport { FilterLabel, FilterInput } from './FilterStyle';\n\nconst Filter = ({ value, changeFilterName }) => {\n  return (\n    <FilterLabel>Find contacts by name\n      <FilterInput value={value} onChange={changeFilterName} type=\"text\" placeholder=\"Enter name\"/>\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilterName: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst ListItem = styled.li`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Text = styled.p`\n  color: #fa8072;\n  margin: 0;\n`;\n\nconst Button = styled.button`\n  margin-left: 8px;\n  background: #ffefd5;\n  color: #fa8072;\n`;\n\nexport { ListItem, Text, Button };\n","import PropTypes from 'prop-types';\nimport { ListItem, Text, Button } from './ContactListItemStyle';\n\nconst ContactListItem = ({ name, number, deleteContact }) => {\n  return (\n    <ListItem>\n      <Text>\n        {name}: {number}\n      </Text>\n      <Button type=\"button\" onClick={deleteContact}>\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport default List;\n","import PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\nimport List from './ContactListStyle';\n\nconst ContactList = ({ filterContacts, deleteContact }) => {\n  return (\n    filterContacts.length > 0 && (\n      <List>\n        {filterContacts.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            deleteContact={() => deleteContact(id)}\n          />\n        ))}\n      </List>\n    )\n  );\n};\n\nContactList.propTypes = {\n  filterContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 300px;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 10px;\n  background-color: #ffe4c4;\n  box-shadow: 2px 1px 2px 1px rgba(0, 0, 0, 0.15),\n    0 10px 10px rgba(0, 0, 0, 0.12);\n`;\n\nconst MainTitle = styled.h1`\n  text-align: center;\n  color: #fa8072;\n`;\n\nconst ContactTitle = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  color: #fa8072;\n`;\n\nexport { Container, MainTitle, ContactTitle };\n","import { Component } from 'react';\n\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nimport { Container, MainTitle, ContactTitle } from './AppStyle';\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  checkingForExistenceOfSuchName = verifiableName => {\n    const { contacts } = this.state;\n    const handleName = verifiableName.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === handleName);\n  }\n\n  handleSubmitContactForm = data => {\n    const { name } = data;\n\n    this.checkingForExistenceOfSuchName(name)\n      ? alert(`${name} is already in contact`)\n      : this.setState(prev => ({ contacts: [...prev.contacts, data] }))\n  };\n\n  changeFilterName = ({ target }) => {\n    const { value } = target;\n    this.setState({ filter: value });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => ({ contacts: [...prev.contacts.filter(({ id }) => id !== contactId)] }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const searchName = filter.toLowerCase();\n    const filterContacts = contacts.filter(({ name }) => name.toLowerCase().includes(searchName));\n\n    return (\n      <Container>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm handleSubmitContactForm={this.handleSubmitContactForm} />\n        <ContactTitle>Contacts</ContactTitle>\n        <Filter value={filter} changeFilterName={this.changeFilterName} />\n        <ContactList\n          filterContacts={filterContacts}\n          deleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}