{"version":3,"sources":["components/ContactForm/ContactFormStyle.js","components/ContactForm/ContactForm.js","components/Filter/FilterStyle.js","components/Filter/Filter.js","components/ContactList/ContactListItemStyle.js","components/ContactList/ContactListItem.js","components/ContactList/ContactListStyle.js","components/ContactList/ContactList.js","components/App/AppStyle.js","components/App/App.js","index.js"],"names":["Form","styled","form","LabelForm","label","InputForm","input","Button","button","ContactForm","state","name","number","handleChange","e","setState","currentTarget","target","value","handleSubmit","event","preventDefault","contact","id","uuidv4","props","handleSubmitContactForm","reset","this","onSubmit","onChange","type","placeholder","required","Component","FilterLabel","FilterInput","Filter","changeFilterName","ListItem","li","Text","p","ContactListItem","deleteContact","onClick","List","ul","ContactList","filterContacts","length","map","Container","div","MainTitle","h1","ContactTitle","h2","App","contacts","filter","data","handleName","toLowerCase","find","alert","prev","contactId","searchName","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d87f1a9f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst LabelForm = styled.label`\r\n  text-align: center;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n  color: #E9967A;\r\n`;\r\n\r\nconst InputForm = styled.input`\r\n  display: block;\r\n  margin: 20px auto;\r\n  padding-left: 16px;\r\n  font-size: 18px;\r\n\r\n  &::placeholder {\r\n      padding-left: 10px;\r\n      font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 180px;\r\n  margin: 0 auto;\r\n  color: #777674;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  text-shadow: rgba(255,255,255,.5) 1px 1px, rgba(100,100,100,.3) 3px 7px 3px;\r\n  user-select: none;\r\n  padding: 1em 2em;\r\n  outline: none;\r\n  border-radius: 3px / 100%;\r\n  background-image:\r\n   linear-gradient(45deg, rgba(255,255,255,.0) 30%, rgba(255,255,255,.8), rgba(255,255,255,.0) 70%),\r\n   linear-gradient(to right, rgba(255,255,255,1), rgba(255,255,255,0) 20%, rgba(255,255,255,0) 90%, rgba(255,255,255,.3)),\r\n   linear-gradient(to right, rgba(125,125,125,1), rgba(255,255,255,.9) 45%, rgba(125,125,125,.5)),\r\n   linear-gradient(to right, rgba(125,125,125,1), rgba(255,255,255,.9) 45%, rgba(125,125,125,.5)),\r\n   linear-gradient(to right, rgba(223,190,170,1), rgba(255,255,255,.9) 45%, rgba(223,190,170,.5)),\r\n   linear-gradient(to right, rgba(223,190,170,1), rgba(255,255,255,.9) 45%, rgba(223,190,170,.5));\r\n  background-repeat: no-repeat;\r\n  background-size: 200% 100%, auto, 100% 2px, 100% 2px, 100% 1px, 100% 1px;\r\n  background-position: 200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\r\n  box-shadow: rgba(0,0,0,.5) 3px 10px 10px -10px;\r\n    \r\n    &:hover {\r\n      transition: .5s linear;\r\n      background-position: -200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\r\n    }\r\n\r\n    &:active {\r\n      top: 1px;\r\n    }\r\n`; \r\n\r\nexport { Form, LabelForm, InputForm, Button };","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, LabelForm, InputForm, Button } from './ContactFormStyle';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.currentTarget.name]: e.target.value });\r\n  };\r\n  \r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = { id: uuidv4(), name, number };\r\n\r\n    this.props.handleSubmitContactForm(contact);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <LabelForm> Name\r\n          <InputForm onChange={this.handleChange} type=\"text\" name={'name'} placeholder=\"Enter name\" value={name} required/>\r\n        </LabelForm>\r\n        <LabelForm> Number\r\n          <InputForm onChange={this.handleChange} type=\"tel\" name={'number'} placeholder=\"Enter number\" value={number} required/>\r\n        </LabelForm>\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    )\r\n  };\r\n    \r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleSubmitContactForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import styled from 'styled-components';\r\n\r\nconst FilterLabel = styled.label`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  color: #FA8072;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst FilterInput = styled.input`\r\n  margin-top: 20px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`;\r\n\r\nexport { FilterLabel, FilterInput };","import PropTypes from 'prop-types';\r\nimport { FilterLabel, FilterInput } from './FilterStyle';\r\n\r\nconst Filter = ({ value, changeFilterName }) => {\r\n    return (\r\n        <FilterLabel> Find contacts by name\r\n            <FilterInput value={value} onChange={changeFilterName} type=\"text\" />\r\n        </FilterLabel>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilterName: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import styled from 'styled-components';\r\n\r\nconst ListItem = styled.li`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  color: #FA8072;\r\n  margin: 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 8px;\r\n  background: #FFEFD5;\r\n  color: #FA8072;\r\n`;\r\n\r\nexport { ListItem, Text, Button };","import PropTypes from 'prop-types';\r\nimport { ListItem, Text, Button } from './ContactListItemStyle';\r\n\r\nconst ContactListItem = ({ name, number, deleteContact }) => {\r\n    return (\r\n        <ListItem>\r\n            <Text>{name}:  {number}</Text>\r\n            <Button type=\"button\" onClick={deleteContact}>Delete</Button>\r\n        </ListItem>\r\n    )\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n`;\r\n\r\nexport default List;","import PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem';\r\nimport List from './ContactListStyle';\r\n\r\nconst ContactList = ({ filterContacts, deleteContact }) => {\r\n    return (\r\n        filterContacts.length > 0 && (\r\n            <List>\r\n                {filterContacts.map(({ id, name, number }) =>\r\n                    <ContactListItem key={id} name={name} number={number} deleteContact={() => deleteContact(id)} />)\r\n                }\r\n            </List>\r\n        )\r\n    )\r\n};\r\n\r\nContactList.propTypes = {\r\n  filterContacts: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  })),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  padding: 20px 10px;\r\n  background-color: #FFE4C4;\r\n  box-shadow: 2px 1px 2px 1px rgba(0,0,0,0.15), 0 10px 10px rgba(0,0,0,0.12);\r\n`;\r\n\r\nconst MainTitle = styled.h1`\r\n  text-align: center;\r\n  color: #FA8072;\r\n`;\r\n\r\nconst ContactTitle = styled.h2`\r\n  text-align: center;\r\n  font-size: 32px;\r\n  color: #FA8072;\r\n`;\r\n\r\nexport { Container, MainTitle, ContactTitle };","import React, { Component } from 'react';\r\n\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\n\r\nimport { Container, MainTitle, ContactTitle } from './AppStyle';\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: ''\r\n    };\r\n\r\n    handleSubmitContactForm = data => {\r\n        const handleName = data.name.toLowerCase();\r\n\r\n        if (this.state.contacts.find(({ name }) => name.toLowerCase() === handleName)) {\r\n            alert(`${data.name} is already in contact`);\r\n            return\r\n        } else {\r\n            this.setState(prev => {\r\n                return { contacts: [...prev.contacts, data] }\r\n            });\r\n        }\r\n    };\r\n\r\n    changeFilterName = e => {\r\n        this.setState({ filter: e.currentTarget.value })\r\n    };\r\n\r\n    deleteContact = (contactId) => {\r\n      this.setState(prev => {\r\n        return{ contacts: [...prev.contacts.filter(({ id }) => id !== contactId)] } \r\n      })\r\n    };\r\n\r\n    render() {\r\n        const { filter } = this.state;\r\n\r\n        const searchName = filter.toLowerCase();\r\n        const filterContacts = this.state.contacts.filter(({ name }) => name.toLowerCase().includes(searchName));\r\n\r\n        return (\r\n            <Container>\r\n                <MainTitle>Phonebook</MainTitle>\r\n                <ContactForm handleSubmitContactForm={this.handleSubmitContactForm}/>\r\n                <ContactTitle>Contacts</ContactTitle>\r\n                <Filter value={filter} changeFilterName={this.changeFilterName}/>\r\n                <ContactList filterContacts={filterContacts} deleteContact={this.deleteContact}/>\r\n            </Container>\r\n        )\r\n    };\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}